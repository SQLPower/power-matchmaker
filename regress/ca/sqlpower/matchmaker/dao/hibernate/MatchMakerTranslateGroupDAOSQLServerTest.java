
package ca.sqlpower.matchmaker.dao.hibernate;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import ca.sqlpower.matchmaker.MatchMakerTranslateGroup;
import ca.sqlpower.matchmaker.dao.AbstractMatchMakerTranslateGroupDAOTestCase;
import ca.sqlpower.matchmaker.dao.MatchMakerTranslateGroupDAO;


public class MatchMakerTranslateGroupDAOSQLServerTest extends AbstractMatchMakerTranslateGroupDAOTestCase{
    
    MatchMakerTranslateGroup translateGroup;
    
    @Override
    protected void setUp() throws Exception {
        super.setUp();
        translateGroup = createNewObjectUnderTest();
    }
    
	@Override
	public MatchMakerTranslateGroupDAO getDataAccessObject() throws Exception {
		return new MatchMakerTranslateGroupDAOHibernate(getSession());
	}
	
	@Override
	public void resetSession() throws Exception {
		((TestingMatchMakerHibernateSession) getSession()).resetSession();
	}

    @Override
    public MatchMakerHibernateSession getSession() throws Exception {
        return HibernateTestUtil.getSqlServerHibernateSession();
    }
    
    public void testIfChildrenLoadWorks() throws Exception {
        final long time = System.currentTimeMillis();
        final String translateGroupName = "translateGroup_"+time;
        Connection con = null;
        Statement stmt = null;
        ResultSet keysRS = null;
        try {
            con = getSession().getConnection();
            stmt = con.createStatement();
            stmt.executeUpdate(
                    "INSERT INTO pl_match_translate_group (translate_group_name) " +
                    "VALUES ('"+translateGroupName+"')");
            
            keysRS = stmt.executeQuery("SELECT translate_group_oid FROM pl_match_translate_group WHERE translate_group_name='"+translateGroupName+"'");
            long oid;
            if (keysRS.next()) {
                oid = keysRS.getLong(1);
            } else {
                throw new SQLException("Couldn't get autogenerated key for new match object");
            }
            keysRS.close();
            keysRS = null;
            
            stmt.executeUpdate(
                    "INSERT INTO pl_match_translate (translate_group_oid,seq_no) " +
                    "VALUES ("+oid+",1)");
        } finally {
            try { stmt.close(); } catch (Exception e) { System.err.println("Couldn't close statement"); e.printStackTrace(); }
            // connection didn't come from a pool so we can't close it
        }
        
        MatchMakerTranslateGroup translateGroup = getDataAccessObject().findByName(translateGroupName);
        translateGroup.getChildren(); // this could fail if the DAO doesn't cascade the retrieval properly
    }
}
