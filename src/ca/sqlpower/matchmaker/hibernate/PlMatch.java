package ca.sqlpower.matchmaker.hibernate;
// Generated Sep 18, 2006 4:34:38 PM by Hibernate Tools 3.2.0.beta7


import java.io.Serializable;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;


/**
 * PlMatch generated by hbm2java, but maintained by hand
 */
public class PlMatch extends DefaultHibernateObject<PlMatchGroup> implements Serializable, Comparable<PlMatch> {

    // Fields
	 private Long id;
     private String matchId;
     private String matchDesc;
     private String tableCatalog;
     private String tableOwner;
     private String matchTable;
     private String pkColumn;
     private String filter;
     private String resultsTable;
     private Date createDate;
     private Date lastUpdateDate;
     private String lastUpdateUser;
     private String sequenceName;
     private boolean compileFlag;
     private Short autoMatchThreshold;
     private String matchLogFileName;
     private boolean matchAppendToLogInd;
     private Long matchProcessCnt;
     private Long matchShowProgressFreq;
     private boolean matchDebugModeInd;
     private String matchRollbackSegmentName;
     private String mergeLogFileName;
     private String matchRunStatus;
     private String matchScriptFileName;
     private BigDecimal matchTotalSteps;
     private BigDecimal matchStepsCompleted;
     private BigDecimal matchRowsInserted;
     private Date matchLastRunDate;
     private String matchLastRunUser;
     private Date mergeCompletionDate;
     private String mergeScriptFileName;
     private String mergeLastUser;
     private String mergeRunStatus;
     private String mergeDesc;
     private boolean mergeAppendToLogInd;
     private BigDecimal mergeProcessCnt;
     private BigDecimal mergeShowProgressFreq;
     private boolean mergeDebugModeInd;
     private String mergeRollbackSegmentName;
     private boolean mergeAugmentNullInd;
     private BigDecimal mergeTotalSteps;
     private BigDecimal mergeStepsCompleted;
     private Date mergeLastRunDate;
     private String mergeLastRunUser;
     private String matchPackageName;
     private String matchProcedureNameAll;
     private String matchProcedureNameOne;
     private String mergePackageName;
     private String mergeProcedureName;
     private BigDecimal mergeRowsInserted;
     private String mergeStepDesc;
     private boolean mergeTablesBackupInd;
     private String matchTablePkColumnFormat;
     private String batchFileName;
     private String selectClause;
     private String fromClause;
     private String whereClause;
     private String resultsTableCatalog;
     private String resultsTableOwner;
     private boolean matchBreakInd;
     private String filterCriteria;
     private String matchType;
     private String lastUpdateOsUser;
     private String matchStepDesc;
     private String matchStatus;
     private BigDecimal lastBackupNo;
     private boolean checkedOutInd;
     private Date checkedOutDate;
     private String checkedOutUser;
     private String checkedOutOsUser;
     private String indexColumnName0;
     private String indexColumnName1;
     private String indexColumnName2;
     private String indexColumnName3;
     private String indexColumnName4;
     private String indexColumnName5;
     private String indexColumnName6;
     private String indexColumnName7;
     private String indexColumnName8;
     private String indexColumnName9;
     private String tempSourceTableName;
     private String tempCandDupTableName;
     private String fromClauseDb;
     private String indexColumnType0;
     private String indexColumnType1;
     private String indexColumnType2;
     private String indexColumnType3;
     private String indexColumnType4;
     private String indexColumnType5;
     private String indexColumnType6;
     private String indexColumnType7;
     private String indexColumnType8;
     private String indexColumnType9;
     private boolean truncateCandDupInd;
     private boolean matchSendEmailInd;
     private boolean mergeSendEmailInd;
     private String xrefCatalog;
     private String xrefOwner;
     private String xrefTableName;
     private boolean autoMatchActiveInd;
     private Set<PlMergeConsolidateCriteria> plMergeConsolidateCriterias = new TreeSet<PlMergeConsolidateCriteria>();
     private Set<PlMatchXrefMap> plMatchXrefMaps = new TreeSet<PlMatchXrefMap>();
     private Set<PlMergeCriteria> plMergeCriteria = new TreeSet<PlMergeCriteria>();
     private Set<PlMatchGroup> plMatchGroups = new TreeSet<PlMatchGroup>();
     private PlFolder folder;
     // Constructor

	/** default constructor */
    public PlMatch() {

    }
 
	public PlFolder getFolder() {
		return folder;
	}

	public void setFolder(PlFolder folder) {
		if (this.folder != folder) {
			firePropertyChange("folder", this.folder, folder);
			this.folder = folder;
		}
	}


	// Property accessors
    public String getMatchId() {
        return this.matchId;
    }

    public String getMatchDesc() {
        return this.matchDesc;
    }

    public String getTableOwner() {
        return this.tableOwner;
    }

	public String getTableCatalog() {
		return tableCatalog;
	}




    public String getMatchTable() {
        return this.matchTable;
    }

    public String getPkColumn() {
        return this.pkColumn;
    }

    public String getFilter() {
        return this.filter;
    }

    public String getResultsTable() {
        return this.resultsTable;
    }

    public Date getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(String createDate) throws ParseException {
    	if ( createDate != null && createDate.length() > 0 ) {
    		DateFormat df = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
    		setCreateDate(df.parse(createDate));
    	}
    }
    public Date getLastUpdateDate() {
        return this.lastUpdateDate;
    }

    public void setLastUpdateDate(String lastUpdateDate) throws ParseException {
    	if ( lastUpdateDate != null && lastUpdateDate.length() > 0 ) {
    		DateFormat df = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
    		setLastUpdateDate(df.parse(lastUpdateDate));
    	}
    }

    public String getLastUpdateUser() {
        return this.lastUpdateUser;
    }

    public String getSequenceName() {
        return this.sequenceName;
    }

    public boolean isCompileFlag() {
        return this.compileFlag;
    }

   public void setCompileFlag(String val) {
    	if ( val != null && val.length() > 0 ) {
    		setCompileFlag(val.charAt(0) == 'y' || val.charAt(0) == 'Y');
    	}
    }

    public String getMergeScriptFileName() {
        return this.mergeScriptFileName;
    }

    public Short getAutoMatchThreshold() {
        return this.autoMatchThreshold;
    }

	public void setAutoMatchThreshold(String val) {
    	if ( val != null && val.length() > 0 && !val.equalsIgnoreCase("null") ) {
    		setAutoMatchThreshold(Short.valueOf(val));
    	}
    }
    public Date getMergeCompletionDate() {
        return this.mergeCompletionDate;
    }

	public void setMergeCompletionDate(String mergeCompletionDate) throws ParseException {
    	if ( mergeCompletionDate != null && mergeCompletionDate.length() > 0 ) {
	    	DateFormat df = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
	    	setMergeCompletionDate(df.parse(mergeCompletionDate));
    	}
    }
    public String getMergeLastUser() {
        return this.mergeLastUser;
    }

    public String getMergeRunStatus() {
        return this.mergeRunStatus;
    }

    public String getMergeDesc() {
        return this.mergeDesc;
    }

    public String getMatchLogFileName() {
        return this.matchLogFileName;
    }


    public boolean isMatchAppendToLogInd() {
        return this.matchAppendToLogInd;
    }

	public void setMatchAppendToLogInd(String val) {
    	if ( val != null && val.length() > 0 ) {
    		setMatchAppendToLogInd(val.charAt(0) == 'y' || val.charAt(0) == 'Y');
    	}
    }

    public Long getMatchProcessCnt() {
        return this.matchProcessCnt;
    }

	public void setMatchProcessCnt(String val) {
    	if ( val != null && val.length() > 0 && !val.equalsIgnoreCase("null")) {
    		setMatchProcessCnt(Long.valueOf(val));
    	}
    }

    public Long getMatchShowProgressFreq() {
        return this.matchShowProgressFreq;
    }

	public void setMatchShowProgressFreq(String val) {
    	if ( val != null && val.length() > 0 && !val.equalsIgnoreCase("null")) {
    		setMatchShowProgressFreq(Long.valueOf(val));
    	}
    }

    public boolean isMatchDebugModeInd() {
        return this.matchDebugModeInd;
    }

	public void setMatchDebugModeInd(String val) {
    	if ( val != null && val.length() > 0 ) {
    		setMatchDebugModeInd(val.charAt(0) == 'y' || val.charAt(0) == 'Y');
    	}
    }

    public String getMatchRollbackSegmentName() {
        return this.matchRollbackSegmentName;
    }

    public String getMergeLogFileName() {
        return this.mergeLogFileName;
    }

    public boolean isMergeAppendToLogInd() {
        return this.mergeAppendToLogInd;
    }

	public void setMergeAppendToLogInd(String val) {
    	if ( val != null && val.length() > 0 ) {
    		setMergeAppendToLogInd(val.charAt(0) == 'y' || val.charAt(0) == 'Y');
    	}
    }

    public BigDecimal getMergeProcessCnt() {
        return this.mergeProcessCnt;
    }

    public void setMergeProcessCnt(String val) {
        if ( val != null && val.length() > 0 && !val.equalsIgnoreCase("null") ) {
        	setMergeProcessCnt(BigDecimal.valueOf(Long.valueOf(val)));
        }
    }

    public BigDecimal getMergeShowProgressFreq() {
        return this.mergeShowProgressFreq;
    }

	public void setMergeShowProgressFreq(String val) {
        if ( val != null && val.length() > 0 && !val.equalsIgnoreCase("null") ) {
        	setMergeShowProgressFreq(BigDecimal.valueOf(Long.valueOf(val)));
        }
    }

    public boolean isMergeDebugModeInd() {
        return this.mergeDebugModeInd;
    }
	public void setMergeDebugModeInd(String val) {
    	if ( val != null && val.length() > 0 ) {
    		setMergeDebugModeInd(val.charAt(0) == 'y' || val.charAt(0) == 'Y');
    	}
    }
    public String getMergeRollbackSegmentName() {
        return this.mergeRollbackSegmentName;
    }

    public boolean isMergeAugmentNullInd() {
        return this.mergeAugmentNullInd;
    }

	public void setMergeAugmentNullInd(String val) {
    	if ( val != null && val.length() > 0 ) {
    		setMergeAugmentNullInd(val.charAt(0) == 'y' || val.charAt(0) == 'Y');
    	}
    }
    public String getMatchRunStatus() {
        return this.matchRunStatus;
    }

    public String getMatchScriptFileName() {
        return this.matchScriptFileName;
    }

    public BigDecimal getMatchTotalSteps() {
        return this.matchTotalSteps;
    }

	public void setMatchTotalSteps(String val) {
        if ( val != null && val.length() > 0 && !val.equalsIgnoreCase("null") ) {
        	setMatchTotalSteps(BigDecimal.valueOf(Long.valueOf(val)));
        }
    }

    public BigDecimal getMatchStepsCompleted() {
        return this.matchStepsCompleted;
    }

	public void setMatchStepsCompleted(String val) {
        if ( val != null && val.length() > 0 && !val.equalsIgnoreCase("null") ) {
        	setMatchStepsCompleted(BigDecimal.valueOf(Long.valueOf(val)));
        }
    }

    public BigDecimal getMatchRowsInserted() {
        return this.matchRowsInserted;
    }

	public void setMatchRowsInserted(String val) {
        if ( val != null && val.length() > 0 && !val.equalsIgnoreCase("null") ) {
        	setMatchRowsInserted(BigDecimal.valueOf(Long.valueOf(val)));
        }
    }

    public Date getMatchLastRunDate() {
        return this.matchLastRunDate;
    }

	public void setMatchLastRunDate(String matchLastRunDate) throws ParseException {
    	if ( matchLastRunDate != null && matchLastRunDate.length() > 0 ) {
	    	DateFormat df = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
	    	setMatchLastRunDate(df.parse(matchLastRunDate));
    	}
    }

    public String getMatchLastRunUser() {
        return this.matchLastRunUser;
    }

    public BigDecimal getMergeTotalSteps() {
        return this.mergeTotalSteps;
    }

	public void setMergeTotalSteps(String val) {
        if ( val != null && val.length() > 0 && !val.equalsIgnoreCase("null") ) {
        	setMergeTotalSteps(BigDecimal.valueOf(Long.valueOf(val)));
        }
    }

    public BigDecimal getMergeStepsCompleted() {
        return this.mergeStepsCompleted;
    }

	public void setMergeStepsCompleted(String val) {
        if ( val != null && val.length() > 0 && !val.equalsIgnoreCase("null") ) {
        	setMergeStepsCompleted(BigDecimal.valueOf(Long.valueOf(val)));
        }
    }

    public Date getMergeLastRunDate() {
        return this.mergeLastRunDate;
    }

	public void setMergeLastRunDate(String mergeLastRunDate) throws ParseException {
    	if ( mergeLastRunDate != null && mergeLastRunDate.length() > 0 ) {
	    	DateFormat df = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
	    	setMergeLastRunDate(df.parse(mergeLastRunDate));
    	}
    }

    public String getMergeLastRunUser() {
        return this.mergeLastRunUser;
    }

    public String getMatchPackageName() {
        return this.matchPackageName;
    }

    public String getMatchProcedureNameAll() {
        return this.matchProcedureNameAll;
    }

    public String getMatchProcedureNameOne() {
        return this.matchProcedureNameOne;
    }

    public String getMergePackageName() {
        return this.mergePackageName;
    }

    public String getMergeProcedureName() {
        return this.mergeProcedureName;
    }

    public String getMatchTablePkColumnFormat() {
        return this.matchTablePkColumnFormat;
    }


    public BigDecimal getMergeRowsInserted() {
        return this.mergeRowsInserted;
    }

  	public void setMergeRowsInserted(String val) {
        if ( val != null && val.length() > 0 && !val.equalsIgnoreCase("null") ) {
        	setMergeRowsInserted(BigDecimal.valueOf(Long.valueOf(val)));
        }
    }

    public String getBatchFileName() {
        return this.batchFileName;
    }


    public String getSelectClause() {
        return this.selectClause;
    }


    public String getFromClause() {
        return this.fromClause;
    }


    public String getWhereClause() {
        return this.whereClause;
    }


    public String getResultsTableOwner() {
        return this.resultsTableOwner;
    }


    public boolean isMatchBreakInd() {
        return this.matchBreakInd;
    }

	public void setMatchBreakInd(String val) {
    	if ( val != null && val.length() > 0 ) {
    		setMatchBreakInd(val.charAt(0) == 'y' || val.charAt(0) == 'Y');
    	}
    }

    public String getFilterCriteria() {
        return this.filterCriteria;
    }


    public String getMatchType() {
        return this.matchType;
    }


    public String getLastUpdateOsUser() {
        return this.lastUpdateOsUser;
    }


    public String getMatchStepDesc() {
        return this.matchStepDesc;
    }


    public String getMergeStepDesc() {
        return this.mergeStepDesc;
    }


    public boolean isMergeTablesBackupInd() {
        return this.mergeTablesBackupInd;
    }

	public void setMergeTablesBackupInd(String val) {
    	if ( val != null && val.length() > 0 ) {
    		setMergeTablesBackupInd(val.charAt(0) == 'y' || val.charAt(0) == 'Y');
    	}
    }

    public String getMatchStatus() {
        return this.matchStatus;
    }


    public BigDecimal getLastBackupNo() {
        return this.lastBackupNo;
    }

	public void setLastBackupNo(String val) {
        if ( val != null && val.length() > 0 && !val.equalsIgnoreCase("null") ) {
        	setLastBackupNo(BigDecimal.valueOf(Long.valueOf(val)));
        }
    }

    public boolean isCheckedOutInd() {
        return this.checkedOutInd;
    }

	public void setCheckedOutInd(String val) {
    	if ( val != null && val.length() > 0 ) {
    		setCheckedOutInd(val.charAt(0) == 'y' || val.charAt(0) == 'Y');
    	}
    }

    public Date getCheckedOutDate() {
        return this.checkedOutDate;
    }

 	public void setCheckedOutDate(String checkedOutDate) throws ParseException {
    	if ( checkedOutDate != null && checkedOutDate.length() > 0 ) {
	    	DateFormat df = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
	    	setCheckedOutDate(df.parse(checkedOutDate));
    	}
    }

    public String getCheckedOutUser() {
        return this.checkedOutUser;
    }


    public String getCheckedOutOsUser() {
        return this.checkedOutOsUser;
    }
 

    public String getTempSourceTableName() {
        return this.tempSourceTableName;
    }


    public String getTempCandDupTableName() {
        return this.tempCandDupTableName;
    }


    public String getFromClauseDb() {
        return this.fromClauseDb;
    }

    public boolean isTruncateCandDupInd() {
        return this.truncateCandDupInd;
    }
	public void setTruncateCandDupInd(String val) {
    	if ( val != null && val.length() > 0 ) {
    		setTruncateCandDupInd(val.charAt(0) == 'y' || val.charAt(0) == 'Y');
    	}
    }

    public boolean isMatchSendEmailInd() {
        return this.matchSendEmailInd;
    }

	public void setMatchSendEmailInd(String val) {
    	if ( val != null && val.length() > 0 ) {
    		setMatchSendEmailInd(val.charAt(0) == 'y' || val.charAt(0) == 'Y');
    	}
    }

    public boolean isMergeSendEmailInd() {
        return this.mergeSendEmailInd;
    }

 	public void setMergeSendEmailInd(String val) {
    	if ( val != null && val.length() > 0 ) {
    		setMergeSendEmailInd(val.charAt(0) == 'y' || val.charAt(0) == 'Y');
    	}
    }

    public String getXrefOwner() {
        return this.xrefOwner;
    }


    public String getXrefTableName() {
        return this.xrefTableName;
    }


    public boolean isAutoMatchActiveInd() {
        return this.autoMatchActiveInd;
    }

    public void setAutoMatchActiveInd(String val) {
    	if ( val != null && val.length() > 0 ) {
    		setAutoMatchActiveInd(val.charAt(0) == 'y' || val.charAt(0) == 'Y');
    	}
    }

    public Set<PlMergeConsolidateCriteria> getPlMergeConsolidateCriterias() {
        return Collections.unmodifiableSet(this.plMergeConsolidateCriterias);
    }

    public Set<PlMatchXrefMap> getPlMatchXrefMaps() {
        return Collections.unmodifiableSet(this.plMatchXrefMaps);
    }

    public Set<PlMergeCriteria> getPlMergeCriteria() {
        return Collections.unmodifiableSet(this.plMergeCriteria);
    }


    public Set<PlMatchGroup> getPlMatchGroups() {
        return Collections.unmodifiableSet(this.plMatchGroups);
    }



    @Override
    public String toString() {
    	return matchId;
    }

    @Override
    public int getChildCount() {
    	return plMatchGroups.size();
    }

    @Override
    public List<PlMatchGroup> getChildren() {
    	List<PlMatchGroup> children = new ArrayList<PlMatchGroup>();
    	for (PlMatchGroup group : plMatchGroups){
    		children.add(group);
    	}
    	Collections.sort(children);
    	return children;
    }



	@Override
	public int hashCode() {
		final int PRIME = 31;
		int result = 1;
		result = PRIME * result + ((matchId == null) ? 0 : matchId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final PlMatch other = (PlMatch) obj;
		if (matchId == null) {
			if (other.matchId != null)
				return false;
		} else if (!matchId.equals(other.matchId))
			return false;
		return true;
	}

	public int compareTo(PlMatch other) {
		return matchId.compareTo(other.getMatchId());
	}

	public String getResultsTableCatalog() {
		return resultsTableCatalog;
	}



	public String getXrefCatalog() {
		return xrefCatalog;
	}



	/**
	 * add for xml parser
	 *
	 *
	 */
	public void xmlAddMatchGroup(PlMatchGroup g) {
		addPlMatchGroups(g);
		g.setPlMatch(this);
	}
	public void xmlAddMatchCriteria(PlMatchCriterion c) {
		// FIXME this needs work
		throw new UnsupportedOperationException("XML import is broken right now.");
//		for ( PlMatchGroup g : getPlMatchGroups() ) {
			//PlMatchGroupId id = new PlMatchGroupId(c.getId().getMatchId(),c.getId().getGroupId());
//			if ( .equals(g.getId()) ) {
//				g.addPlMatchCriteria(c);
//				c.setPlMatchGroup(g);
//				break;
//			}
//		}
	}
	public void xmlAddMergeCriteria(PlMergeCriteria c) {
		plMergeCriteria.add(c);
		c.setPlMatch(this);
	}

	public void xmlAddMergeConsolidateCriteria(PlMergeConsolidateCriteria c) {
		plMergeConsolidateCriterias.add(c);
		c.setPlMatch(this);
	}



	public void addAllPlMatchGroups(Set<PlMatchGroup> groups){
		Set<PlMatchGroup> oldGroups = new HashSet<PlMatchGroup>(getPlMatchGroups());
		for (PlMatchGroup pmg: groups){
			plMatchGroups.add(pmg);
	    	pmg.addAllHierarchicalChangeListeners(getHierarchicalChangeListeners());
		}
		firePropertyChange("plMatchGroups",oldGroups,getPlMatchGroups());
	}

    public boolean addPlMatchGroups(PlMatchGroup pmg) {
    	Set<PlMatchGroup> oldGroups = new HashSet<PlMatchGroup>(getPlMatchGroups());
    	boolean b = plMatchGroups.add(pmg);
    	pmg.addAllHierarchicalChangeListeners(getHierarchicalChangeListeners());
    	firePropertyChange("plMatchGroups",oldGroups,getPlMatchGroups());
    	return b;
    }

    public boolean removePlMatchGroups(PlMatchGroup pmg) {
    	Set<PlMatchGroup> oldGroups = new HashSet<PlMatchGroup>(getPlMatchGroups());
    	boolean b = plMatchGroups.remove(pmg);
    	pmg.removeAllHierarchicalChangeListeners(getHierarchicalChangeListeners());
    	firePropertyChange("plMatchGroups",oldGroups,getPlMatchGroups());
    	return b;
    }

    public void clearPlMatchGroups(){
    	Set<PlMatchGroup> oldGroups = new HashSet<PlMatchGroup>(getPlMatchGroups());
    	for(PlMatchGroup pmg:getPlMatchGroups()){
    		plMatchGroups.remove(pmg);
        	pmg.removeAllHierarchicalChangeListeners(getHierarchicalChangeListeners());
    	}
    	firePropertyChange("plMatchGroups",oldGroups,getPlMatchGroups());

    }

	public void setAutoMatchActiveInd(boolean autoMatchActiveInd) {
		if (this.autoMatchActiveInd != autoMatchActiveInd) {
			firePropertyChange("autoMatchActiveInd", this.autoMatchActiveInd, autoMatchActiveInd);
			this.autoMatchActiveInd = autoMatchActiveInd;
		}
	}

	public void setAutoMatchThreshold(Short autoMatchThreshold) {
		if (this.autoMatchThreshold != autoMatchThreshold) {
			firePropertyChange("autoMatchThreshold", this.autoMatchThreshold, autoMatchThreshold);
			this.autoMatchThreshold = autoMatchThreshold;
		}
	}

	public void setBatchFileName(String batchFileName) {
		if (this.batchFileName != batchFileName) {
			firePropertyChange("batchFileName", this.batchFileName, batchFileName);
			this.batchFileName = batchFileName;
		}
	}

	public void setCheckedOutDate(Date checkedOutDate) {
		if (this.checkedOutDate != checkedOutDate) {
			firePropertyChange("checkedOutDate", this.checkedOutDate, checkedOutDate);
			this.checkedOutDate = checkedOutDate;
		}
	}

	public void setCheckedOutInd(boolean checkedOutInd) {
		if (this.checkedOutInd != checkedOutInd) {
			firePropertyChange("checkedOutInd", this.checkedOutInd, checkedOutInd);
			this.checkedOutInd = checkedOutInd;
		}
	}

	public void setCheckedOutOsUser(String checkedOutOsUser) {
		if (this.checkedOutOsUser != checkedOutOsUser) {
			firePropertyChange("checkedOutOsUser", this.checkedOutOsUser, checkedOutOsUser);
			this.checkedOutOsUser = checkedOutOsUser;
		}
	}

	public void setCheckedOutUser(String checkedOutUser) {
		if (this.checkedOutUser != checkedOutUser) {
			firePropertyChange("checkedOutUser", this.checkedOutUser, checkedOutUser);
			this.checkedOutUser = checkedOutUser;
		}
	}

	public void setCompileFlag(boolean compileFlag) {
		if (this.compileFlag != compileFlag) {
			firePropertyChange("compileFlag", this.compileFlag, compileFlag);
			this.compileFlag = compileFlag;
		}
	}

	public void setCreateDate(Date createDate) {
		if (this.createDate != createDate) {
			firePropertyChange("createDate", this.createDate, createDate);
			this.createDate = createDate;
		}
	}

	public void setFilter(String filter) {
		if (this.filter != filter) {
			firePropertyChange("filter", this.filter, filter);
			this.filter = filter;
		}
	}

	public void setFilterCriteria(String filterCriteria) {
		if (this.filterCriteria != filterCriteria) {
			firePropertyChange("filterCriteria", this.filterCriteria, filterCriteria);
			this.filterCriteria = filterCriteria;
		}
	}

	public void setFromClause(String fromClause) {
		if (this.fromClause != fromClause) {
			firePropertyChange("fromClause", this.fromClause, fromClause);
			this.fromClause = fromClause;
		}
	}

	public void setFromClauseDb(String fromClauseDb) {
		if (this.fromClauseDb != fromClauseDb) {
			firePropertyChange("fromClauseDb", this.fromClauseDb, fromClauseDb);
			this.fromClauseDb = fromClauseDb;
		}
	}

	public void setLastBackupNo(BigDecimal lastBackupNo) {
		if (this.lastBackupNo != lastBackupNo) {
			firePropertyChange("lastBackupNo", this.lastBackupNo, lastBackupNo);
			this.lastBackupNo = lastBackupNo;
		}
	}

	public void setLastUpdateDate(Date lastUpdateDate) {
		if (this.lastUpdateDate != lastUpdateDate) {
			firePropertyChange("lastUpdateDate", this.lastUpdateDate, lastUpdateDate);
			this.lastUpdateDate = lastUpdateDate;
		}
	}

	public void setLastUpdateOsUser(String lastUpdateOsUser) {
		if (this.lastUpdateOsUser != lastUpdateOsUser) {
			firePropertyChange("lastUpdateOsUser", this.lastUpdateOsUser, lastUpdateOsUser);
			this.lastUpdateOsUser = lastUpdateOsUser;
		}
	}

	public void setLastUpdateUser(String lastUpdateUser) {
		if (this.lastUpdateUser != lastUpdateUser) {
			firePropertyChange("lastUpdateUser", this.lastUpdateUser, lastUpdateUser);
			this.lastUpdateUser = lastUpdateUser;
		}
	}

	public void setMatchAppendToLogInd(boolean matchAppendToLogInd) {
		if (this.matchAppendToLogInd != matchAppendToLogInd) {
			firePropertyChange("matchAppendToLogInd", this.matchAppendToLogInd, matchAppendToLogInd);
			this.matchAppendToLogInd = matchAppendToLogInd;
		}
	}

	public void setMatchBreakInd(boolean matchBreakInd) {
		if (this.matchBreakInd != matchBreakInd) {
			firePropertyChange("matchBreakInd", this.matchBreakInd, matchBreakInd);
			this.matchBreakInd = matchBreakInd;
		}
	}

	public void setMatchDebugModeInd(boolean matchDebugModeInd) {
		if (this.matchDebugModeInd != matchDebugModeInd) {
			firePropertyChange("matchDebugModeInd", this.matchDebugModeInd, matchDebugModeInd);
			this.matchDebugModeInd = matchDebugModeInd;
		}
	}

	public void setMatchDesc(String matchDesc) {
		if (this.matchDesc != matchDesc) {
			firePropertyChange("matchDesc", this.matchDesc, matchDesc);
			this.matchDesc = matchDesc;
		}
	}

	public void setMatchId(String matchId) {
		if (this.matchId != matchId) {
			firePropertyChange("matchId", this.matchId, matchId);
			this.matchId = matchId;
		}
	}

	public void setMatchLastRunDate(Date matchLastRunDate) {
		if (this.matchLastRunDate != matchLastRunDate) {
			firePropertyChange("matchLastRunDate", this.matchLastRunDate, matchLastRunDate);
			this.matchLastRunDate = matchLastRunDate;
		}
	}

	public void setMatchLastRunUser(String matchLastRunUser) {
		if (this.matchLastRunUser != matchLastRunUser) {
			firePropertyChange("matchLastRunUser", this.matchLastRunUser, matchLastRunUser);
			this.matchLastRunUser = matchLastRunUser;
		}
	}

	public void setMatchLogFileName(String matchLogFileName) {
		if (this.matchLogFileName != matchLogFileName) {
			firePropertyChange("matchLogFileName", this.matchLogFileName, matchLogFileName);
			this.matchLogFileName = matchLogFileName;
		}
	}

	public void setMatchPackageName(String matchPackageName) {
		if (this.matchPackageName != matchPackageName) {
			firePropertyChange("matchPackageName", this.matchPackageName, matchPackageName);
			this.matchPackageName = matchPackageName;
		}
	}

	public void setMatchProcedureNameAll(String matchProcedureNameAll) {
		if (this.matchProcedureNameAll != matchProcedureNameAll) {
			firePropertyChange("matchProcedureNameAll", this.matchProcedureNameAll, matchProcedureNameAll);
			this.matchProcedureNameAll = matchProcedureNameAll;
		}
	}

	public void setMatchProcedureNameOne(String matchProcedureNameOne) {
		if (this.matchProcedureNameOne != matchProcedureNameOne) {
			firePropertyChange("matchProcedureNameOne", this.matchProcedureNameOne, matchProcedureNameOne);
			this.matchProcedureNameOne = matchProcedureNameOne;
		}
	}

	public void setMatchProcessCnt(Long matchProcessCnt) {
		if (this.matchProcessCnt != matchProcessCnt) {
			firePropertyChange("matchProcessCnt", this.matchProcessCnt, matchProcessCnt);
			this.matchProcessCnt = matchProcessCnt;
		}
	}

	public void setMatchRollbackSegmentName(String matchRollbackSegmentName) {
		if (this.matchRollbackSegmentName != matchRollbackSegmentName) {
			firePropertyChange("matchRollbackSegmentName", this.matchRollbackSegmentName, matchRollbackSegmentName);
			this.matchRollbackSegmentName = matchRollbackSegmentName;
		}
	}

	public void setMatchRowsInserted(BigDecimal matchRowsInserted) {
		if (this.matchRowsInserted != matchRowsInserted) {
			firePropertyChange("matchRowsInserted", this.matchRowsInserted, matchRowsInserted);
			this.matchRowsInserted = matchRowsInserted;
		}
	}

	public void setMatchRunStatus(String matchRunStatus) {
		if (this.matchRunStatus != matchRunStatus) {
			firePropertyChange("matchRunStatus", this.matchRunStatus, matchRunStatus);
			this.matchRunStatus = matchRunStatus;
		}
	}

	public void setMatchScriptFileName(String matchScriptFileName) {
		if (this.matchScriptFileName != matchScriptFileName) {
			firePropertyChange("matchScriptFileName", this.matchScriptFileName, matchScriptFileName);
			this.matchScriptFileName = matchScriptFileName;
		}
	}

	public void setMatchSendEmailInd(boolean matchSendEmailInd) {
		if (this.matchSendEmailInd != matchSendEmailInd) {
			firePropertyChange("matchSendEmailInd", this.matchSendEmailInd, matchSendEmailInd);
			this.matchSendEmailInd = matchSendEmailInd;
		}
	}

	public void setMatchShowProgressFreq(Long matchShowProgressFreq) {
		if (this.matchShowProgressFreq != matchShowProgressFreq) {
			firePropertyChange("matchShowProgressFreq", this.matchShowProgressFreq, matchShowProgressFreq);
			this.matchShowProgressFreq = matchShowProgressFreq;
		}
	}

	public void setMatchStatus(String matchStatus) {
		if (this.matchStatus != matchStatus) {
			firePropertyChange("matchStatus", this.matchStatus, matchStatus);
			this.matchStatus = matchStatus;
		}
	}

	public void setMatchStepDesc(String matchStepDesc) {
		if (this.matchStepDesc != matchStepDesc) {
			firePropertyChange("matchStepDesc", this.matchStepDesc, matchStepDesc);
			this.matchStepDesc = matchStepDesc;
		}
	}

	public void setMatchStepsCompleted(BigDecimal matchStepsCompleted) {
		if (this.matchStepsCompleted != matchStepsCompleted) {
			firePropertyChange("matchStepsCompleted", this.matchStepsCompleted, matchStepsCompleted);
			this.matchStepsCompleted = matchStepsCompleted;
		}
	}

	public void setMatchTable(String matchTable) {
		if (this.matchTable != matchTable) {
			firePropertyChange("matchTable", this.matchTable, matchTable);
			this.matchTable = matchTable;
		}
	}

	public void setMatchTablePkColumnFormat(String matchTablePkColumnFormat) {
		if (this.matchTablePkColumnFormat != matchTablePkColumnFormat) {
			firePropertyChange("matchTablePkColumnFormat", this.matchTablePkColumnFormat, matchTablePkColumnFormat);
			this.matchTablePkColumnFormat = matchTablePkColumnFormat;
		}
	}

	public void setMatchTotalSteps(BigDecimal matchTotalSteps) {
		if (this.matchTotalSteps != matchTotalSteps) {
			firePropertyChange("matchTotalSteps", this.matchTotalSteps, matchTotalSteps);
			this.matchTotalSteps = matchTotalSteps;
		}
	}

	public void setMatchType(String matchType) {
		if (this.matchType != matchType) {
			firePropertyChange("matchType", this.matchType, matchType);
			this.matchType = matchType;
		}
	}

	public void setMergeAppendToLogInd(boolean mergeAppendToLogInd) {
		if (this.mergeAppendToLogInd != mergeAppendToLogInd) {
			firePropertyChange("mergeAppendToLogInd", this.mergeAppendToLogInd, mergeAppendToLogInd);
			this.mergeAppendToLogInd = mergeAppendToLogInd;
		}
	}

	public void setMergeAugmentNullInd(boolean mergeAugmentNullInd) {
		if (this.mergeAugmentNullInd != mergeAugmentNullInd) {
			firePropertyChange("mergeAugmentNullInd", this.mergeAugmentNullInd, mergeAugmentNullInd);
			this.mergeAugmentNullInd = mergeAugmentNullInd;
		}
	}

	public void setMergeCompletionDate(Date mergeCompletionDate) {
		if (this.mergeCompletionDate != mergeCompletionDate) {
			firePropertyChange("mergeCompletionDate", this.mergeCompletionDate, mergeCompletionDate);
			this.mergeCompletionDate = mergeCompletionDate;
		}
	}

	public void setMergeDebugModeInd(boolean mergeDebugModeInd) {
		if (this.mergeDebugModeInd != mergeDebugModeInd) {
			firePropertyChange("mergeDebugModeInd", this.mergeDebugModeInd, mergeDebugModeInd);
			this.mergeDebugModeInd = mergeDebugModeInd;
		}
	}

	public void setMergeDesc(String mergeDesc) {
		if (this.mergeDesc != mergeDesc) {
			firePropertyChange("mergeDesc", this.mergeDesc, mergeDesc);
			this.mergeDesc = mergeDesc;
		}
	}

	public void setMergeLastRunDate(Date mergeLastRunDate) {
		if (this.mergeLastRunDate != mergeLastRunDate) {
			firePropertyChange("mergeLastRunDate", this.mergeLastRunDate, mergeLastRunDate);
			this.mergeLastRunDate = mergeLastRunDate;
		}
	}

	public void setMergeLastRunUser(String mergeLastRunUser) {
		if (this.mergeLastRunUser != mergeLastRunUser) {
			firePropertyChange("mergeLastRunUser", this.mergeLastRunUser, mergeLastRunUser);
			this.mergeLastRunUser = mergeLastRunUser;
		}
	}

	public void setMergeLastUser(String mergeLastUser) {
		if (this.mergeLastUser != mergeLastUser) {
			firePropertyChange("mergeLastUser", this.mergeLastUser, mergeLastUser);
			this.mergeLastUser = mergeLastUser;
		}
	}

	public void setMergeLogFileName(String mergeLogFileName) {
		if (this.mergeLogFileName != mergeLogFileName) {
			firePropertyChange("mergeLogFileName", this.mergeLogFileName, mergeLogFileName);
			this.mergeLogFileName = mergeLogFileName;
		}
	}

	public void setMergePackageName(String mergePackageName) {
		if (this.mergePackageName != mergePackageName) {
			firePropertyChange("mergePackageName", this.mergePackageName, mergePackageName);
			this.mergePackageName = mergePackageName;
		}
	}

	public void setMergeProcedureName(String mergeProcedureName) {
		if (this.mergeProcedureName != mergeProcedureName) {
			firePropertyChange("mergeProcedureName", this.mergeProcedureName, mergeProcedureName);
			this.mergeProcedureName = mergeProcedureName;
		}
	}

	public void setMergeProcessCnt(BigDecimal mergeProcessCnt) {
		if (this.mergeProcessCnt != mergeProcessCnt) {
			firePropertyChange("mergeProcessCnt", this.mergeProcessCnt, mergeProcessCnt);
			this.mergeProcessCnt = mergeProcessCnt;
		}
	}

	public void setMergeRollbackSegmentName(String mergeRollbackSegmentName) {
		if (this.mergeRollbackSegmentName != mergeRollbackSegmentName) {
			firePropertyChange("mergeRollbackSegmentName", this.mergeRollbackSegmentName, mergeRollbackSegmentName);
			this.mergeRollbackSegmentName = mergeRollbackSegmentName;
		}
	}

	public void setMergeRowsInserted(BigDecimal mergeRowsInserted) {
		if (this.mergeRowsInserted != mergeRowsInserted) {
			firePropertyChange("mergeRowsInserted", this.mergeRowsInserted, mergeRowsInserted);
			this.mergeRowsInserted = mergeRowsInserted;
		}
	}

	public void setMergeRunStatus(String mergeRunStatus) {
		if (this.mergeRunStatus != mergeRunStatus) {
			firePropertyChange("mergeRunStatus", this.mergeRunStatus, mergeRunStatus);
			this.mergeRunStatus = mergeRunStatus;
		}
	}

	public void setMergeScriptFileName(String mergeScriptFileName) {
		if (this.mergeScriptFileName != mergeScriptFileName) {
			firePropertyChange("mergeScriptFileName", this.mergeScriptFileName, mergeScriptFileName);
			this.mergeScriptFileName = mergeScriptFileName;
		}
	}

	public void setMergeSendEmailInd(boolean mergeSendEmailInd) {
		if (this.mergeSendEmailInd != mergeSendEmailInd) {
			firePropertyChange("mergeSendEmailInd", this.mergeSendEmailInd, mergeSendEmailInd);
			this.mergeSendEmailInd = mergeSendEmailInd;
		}
	}

	public void setMergeShowProgressFreq(BigDecimal mergeShowProgressFreq) {
		if (this.mergeShowProgressFreq != mergeShowProgressFreq) {
			firePropertyChange("mergeShowProgressFreq", this.mergeShowProgressFreq, mergeShowProgressFreq);
			this.mergeShowProgressFreq = mergeShowProgressFreq;
		}
	}

	public void setMergeStepDesc(String mergeStepDesc) {
		if (this.mergeStepDesc != mergeStepDesc) {
			firePropertyChange("mergeStepDesc", this.mergeStepDesc, mergeStepDesc);
			this.mergeStepDesc = mergeStepDesc;
		}
	}

	public void setMergeStepsCompleted(BigDecimal mergeStepsCompleted) {
		if (this.mergeStepsCompleted != mergeStepsCompleted) {
			firePropertyChange("mergeStepsCompleted", this.mergeStepsCompleted, mergeStepsCompleted);
			this.mergeStepsCompleted = mergeStepsCompleted;
		}
	}

	public void setMergeTablesBackupInd(boolean mergeTablesBackupInd) {
		if (this.mergeTablesBackupInd != mergeTablesBackupInd) {
			firePropertyChange("mergeTablesBackupInd", this.mergeTablesBackupInd, mergeTablesBackupInd);
			this.mergeTablesBackupInd = mergeTablesBackupInd;
		}
	}

	public void setMergeTotalSteps(BigDecimal mergeTotalSteps) {
		if (this.mergeTotalSteps != mergeTotalSteps) {
			firePropertyChange("mergeTotalSteps", this.mergeTotalSteps, mergeTotalSteps);
			this.mergeTotalSteps = mergeTotalSteps;
		}
	}

	public void setPkColumn(String pkColumn) {
		if (this.pkColumn != pkColumn) {
			firePropertyChange("pkColumn", this.pkColumn, pkColumn);
			this.pkColumn = pkColumn;
		}
	}

	public void setPlMatchGroups(Set<PlMatchGroup> plMatchGroups) {
		if (this.plMatchGroups != plMatchGroups) {
			firePropertyChange("plMatchGroups", this.plMatchGroups, plMatchGroups);
			this.plMatchGroups = plMatchGroups;
		}
	}

	public void setPlMatchXrefMaps(Set<PlMatchXrefMap> plMatchXrefMaps) {
		if (this.plMatchXrefMaps != plMatchXrefMaps) {
			firePropertyChange("plMatchXrefMaps", this.plMatchXrefMaps, plMatchXrefMaps);
			this.plMatchXrefMaps = plMatchXrefMaps;
		}
	}

	public void setPlMergeConsolidateCriterias(Set<PlMergeConsolidateCriteria> plMergeConsolidateCriterias) {
		if (this.plMergeConsolidateCriterias != plMergeConsolidateCriterias) {
			firePropertyChange("plMergeConsolidateCriterias", this.plMergeConsolidateCriterias,
					plMergeConsolidateCriterias);
			this.plMergeConsolidateCriterias = plMergeConsolidateCriterias;
		}
	}

	public void setPlMergeCriteria(Set<PlMergeCriteria> plMergeCriteria) {
		if (this.plMergeCriteria != plMergeCriteria) {
			firePropertyChange("plMergeCriteria", this.plMergeCriteria, plMergeCriteria);
			this.plMergeCriteria = plMergeCriteria;
		}
	}

	public void setResultsTable(String resultsTable) {
		if (this.resultsTable != resultsTable) {
			firePropertyChange("resultsTable", this.resultsTable, resultsTable);
			this.resultsTable = resultsTable;
		}
	}

	public void setResultsTableCatalog(String resultsTableCatalog) {
		if (this.resultsTableCatalog != resultsTableCatalog) {
			firePropertyChange("resultsTableCatalog", this.resultsTableCatalog, resultsTableCatalog);
			this.resultsTableCatalog = resultsTableCatalog;
		}
	}

	public void setResultsTableOwner(String resultsTableOwner) {
		if (this.resultsTableOwner != resultsTableOwner) {
			firePropertyChange("resultsTableOwner", this.resultsTableOwner, resultsTableOwner);
			this.resultsTableOwner = resultsTableOwner;
		}
	}

	public void setSelectClause(String selectClause) {
		if (this.selectClause != selectClause) {
			firePropertyChange("selectClause", this.selectClause, selectClause);
			this.selectClause = selectClause;
		}
	}

	public void setSequenceName(String sequenceName) {
		if (this.sequenceName != sequenceName) {
			firePropertyChange("sequenceName", this.sequenceName, sequenceName);
			this.sequenceName = sequenceName;
		}
	}

	public void setTableCatalog(String tableCatalog) {
		if (this.tableCatalog != tableCatalog) {
			firePropertyChange("tableCatalog", this.tableCatalog, tableCatalog);
			this.tableCatalog = tableCatalog;
		}
	}

	public void setTableOwner(String tableOwner) {
		if (this.tableOwner != tableOwner) {
			firePropertyChange("tableOwner", this.tableOwner, tableOwner);
			this.tableOwner = tableOwner;
		}
	}

	public void setTempCandDupTableName(String tempCandDupTableName) {
		if (this.tempCandDupTableName != tempCandDupTableName) {
			firePropertyChange("tempCandDupTableName", this.tempCandDupTableName, tempCandDupTableName);
			this.tempCandDupTableName = tempCandDupTableName;
		}
	}

	public void setTempSourceTableName(String tempSourceTableName) {
		if (this.tempSourceTableName != tempSourceTableName) {
			firePropertyChange("tempSourceTableName", this.tempSourceTableName, tempSourceTableName);
			this.tempSourceTableName = tempSourceTableName;
		}
	}

	public void setTruncateCandDupInd(boolean truncateCandDupInd) {
		if (this.truncateCandDupInd != truncateCandDupInd) {
			firePropertyChange("truncateCandDupInd", this.truncateCandDupInd, truncateCandDupInd);
			this.truncateCandDupInd = truncateCandDupInd;
		}
	}

	public void setWhereClause(String whereClause) {
		if (this.whereClause != whereClause) {
			firePropertyChange("whereClause", this.whereClause, whereClause);
			this.whereClause = whereClause;
		}
	}

	public void setXrefCatalog(String xrefCatalog) {
		if (this.xrefCatalog != xrefCatalog) {
			firePropertyChange("xrefCatalog", this.xrefCatalog, xrefCatalog);
			this.xrefCatalog = xrefCatalog;
		}
	}

	public void setXrefOwner(String xrefOwner) {
		if (this.xrefOwner != xrefOwner) {
			firePropertyChange("xrefOwner", this.xrefOwner, xrefOwner);
			this.xrefOwner = xrefOwner;
		}
	}

	public void setXrefTableName(String xrefTableName) {
		if (this.xrefTableName != xrefTableName) {
			firePropertyChange("xrefTableName", this.xrefTableName, xrefTableName);
			this.xrefTableName = xrefTableName;
		}
	}

	public Long getId() {
		return id;
	}

	private void setId(Long id) {
		if (this.id != id) {
			firePropertyChange("id", this.id, id);
			this.id = id;
		}
	}

	public String getIndexColumnName0() {
		return indexColumnName0;
	}

	public void setIndexColumnName0(String indexColumnName0) {
		if (this.indexColumnName0 != indexColumnName0) {
			firePropertyChange("indexColumnName0", this.indexColumnName0, indexColumnName0);
			this.indexColumnName0 = indexColumnName0;
		}
	}

	public String getIndexColumnName1() {
		return indexColumnName1;
	}

	public void setIndexColumnName1(String indexColumnName1) {
		if (this.indexColumnName1 != indexColumnName1) {
			firePropertyChange("indexColumnName1", this.indexColumnName1, indexColumnName1);
			this.indexColumnName1 = indexColumnName1;
		}
	}

	public String getIndexColumnName2() {
		return indexColumnName2;
	}

	public void setIndexColumnName2(String indexColumnName2) {
		if (this.indexColumnName2 != indexColumnName2) {
			firePropertyChange("indexColumnName2", this.indexColumnName2, indexColumnName2);
			this.indexColumnName2 = indexColumnName2;
		}
	}

	public String getIndexColumnName3() {
		return indexColumnName3;
	}

	public void setIndexColumnName3(String indexColumnName3) {
		if (this.indexColumnName3 != indexColumnName3) {
			firePropertyChange("indexColumnName3", this.indexColumnName3, indexColumnName3);
			this.indexColumnName3 = indexColumnName3;
		}
	}

	public String getIndexColumnName4() {
		return indexColumnName4;
	}

	public void setIndexColumnName4(String indexColumnName4) {
		if (this.indexColumnName4 != indexColumnName4) {
			firePropertyChange("indexColumnName4", this.indexColumnName4, indexColumnName4);
			this.indexColumnName4 = indexColumnName4;
		}
	}

	public String getIndexColumnName5() {
		return indexColumnName5;
	}

	public void setIndexColumnName5(String indexColumnName5) {
		if (this.indexColumnName5 != indexColumnName5) {
			firePropertyChange("indexColumnName5", this.indexColumnName5, indexColumnName5);
			this.indexColumnName5 = indexColumnName5;
		}
	}

	public String getIndexColumnName6() {
		return indexColumnName6;
	}

	public void setIndexColumnName6(String indexColumnName6) {
		if (this.indexColumnName6 != indexColumnName6) {
			firePropertyChange("indexColumnName6", this.indexColumnName6, indexColumnName6);
			this.indexColumnName6 = indexColumnName6;
		}
	}

	public String getIndexColumnName7() {
		return indexColumnName7;
	}

	public void setIndexColumnName7(String indexColumnName7) {
		if (this.indexColumnName7 != indexColumnName7) {
			firePropertyChange("indexColumnName7", this.indexColumnName7, indexColumnName7);
			this.indexColumnName7 = indexColumnName7;
		}
	}

	public String getIndexColumnName8() {
		return indexColumnName8;
	}

	public void setIndexColumnName8(String indexColumnName8) {
		if (this.indexColumnName8 != indexColumnName8) {
			firePropertyChange("indexColumnName8", this.indexColumnName8, indexColumnName8);
			this.indexColumnName8 = indexColumnName8;
		}
	}

	public String getIndexColumnName9() {
		return indexColumnName9;
	}

	public void setIndexColumnName9(String indexColumnName9) {
		if (this.indexColumnName9 != indexColumnName9) {
			firePropertyChange("indexColumnName9", this.indexColumnName9, indexColumnName9);
			this.indexColumnName9 = indexColumnName9;
		}
	}

	public String getIndexColumnType0() {
		return indexColumnType0;
	}

	public void setIndexColumnType0(String indexColumnType0) {
		if (this.indexColumnType0 != indexColumnType0) {
			firePropertyChange("indexColumnType0", this.indexColumnType0, indexColumnType0);
			this.indexColumnType0 = indexColumnType0;
		}
	}

	public String getIndexColumnType1() {
		return indexColumnType1;
	}

	public void setIndexColumnType1(String indexColumnType1) {
		if (this.indexColumnType1 != indexColumnType1) {
			firePropertyChange("indexColumnType1", this.indexColumnType1, indexColumnType1);
			this.indexColumnType1 = indexColumnType1;
		}
	}

	public String getIndexColumnType2() {
		return indexColumnType2;
	}

	public void setIndexColumnType2(String indexColumnType2) {
		if (this.indexColumnType2 != indexColumnType2) {
			firePropertyChange("indexColumnType2", this.indexColumnType2, indexColumnType2);
			this.indexColumnType2 = indexColumnType2;
		}
	}

	public String getIndexColumnType3() {
		return indexColumnType3;
	}

	public void setIndexColumnType3(String indexColumnType3) {
		if (this.indexColumnType3 != indexColumnType3) {
			firePropertyChange("indexColumnType3", this.indexColumnType3, indexColumnType3);
			this.indexColumnType3 = indexColumnType3;
		}
	}

	public String getIndexColumnType4() {
		return indexColumnType4;
	}

	public void setIndexColumnType4(String indexColumnType4) {
		if (this.indexColumnType4 != indexColumnType4) {
			firePropertyChange("indexColumnType4", this.indexColumnType4, indexColumnType4);
			this.indexColumnType4 = indexColumnType4;
		}
	}

	public String getIndexColumnType5() {
		return indexColumnType5;
	}

	public void setIndexColumnType5(String indexColumnType5) {
		if (this.indexColumnType5 != indexColumnType5) {
			firePropertyChange("indexColumnType5", this.indexColumnType5, indexColumnType5);
			this.indexColumnType5 = indexColumnType5;
		}
	}

	public String getIndexColumnType6() {
		return indexColumnType6;
	}

	public void setIndexColumnType6(String indexColumnType6) {
		if (this.indexColumnType6 != indexColumnType6) {
			firePropertyChange("indexColumnType6", this.indexColumnType6, indexColumnType6);
			this.indexColumnType6 = indexColumnType6;
		}
	}

	public String getIndexColumnType7() {
		return indexColumnType7;
	}

	public void setIndexColumnType7(String indexColumnType7) {
		if (this.indexColumnType7 != indexColumnType7) {
			firePropertyChange("indexColumnType7", this.indexColumnType7, indexColumnType7);
			this.indexColumnType7 = indexColumnType7;
		}
	}

	public String getIndexColumnType8() {
		return indexColumnType8;
	}

	public void setIndexColumnType8(String indexColumnType8) {
		if (this.indexColumnType8 != indexColumnType8) {
			firePropertyChange("indexColumnType8", this.indexColumnType8, indexColumnType8);
			this.indexColumnType8 = indexColumnType8;
		}
	}

	public String getIndexColumnType9() {
		return indexColumnType9;
	}

	public void setIndexColumnType9(String indexColumnType9) {
		if (this.indexColumnType9 != indexColumnType9) {
			firePropertyChange("indexColumnType9", this.indexColumnType9, indexColumnType9);
			this.indexColumnType9 = indexColumnType9;
		}
	}




}


