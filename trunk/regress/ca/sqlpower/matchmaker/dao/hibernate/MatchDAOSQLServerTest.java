package ca.sqlpower.matchmaker.dao.hibernate;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;

import ca.sqlpower.matchmaker.Match;
import ca.sqlpower.matchmaker.MatchMakerCriteriaGroup;
import ca.sqlpower.matchmaker.dao.AbstractPlMatchDAOTestCase;
import ca.sqlpower.matchmaker.dao.MatchDAO;


public class MatchDAOSQLServerTest extends AbstractPlMatchDAOTestCase {
    
    @Override
    public MatchDAO getDataAccessObject() throws Exception {
        return new MatchDAOHibernate(getSession());
    }
    
    @Override
    public MatchMakerHibernateSession getSession() throws Exception {
        return HibernateTestUtil.getSqlServerHibernateSession();
    }
    
    public void testIfChildrenLoadWorks() throws Exception {
        final long time = System.currentTimeMillis();
        final String matchName = "match_"+time;
        Connection con = null;
        Statement stmt = null;
        ResultSet keysRS = null;
        try {
            con = getSession().getConnection();
            stmt = con.createStatement();
            stmt.executeUpdate(
                    "INSERT INTO pl_match (match_id, match_type) " +
                    "VALUES ('"+matchName+"', '"+Match.MatchType.FIND_DUPES+"')");
            
            keysRS = stmt.executeQuery("SELECT match_oid FROM pl_match WHERE match_id='"+matchName+"'");
            long matchOid;
            if (keysRS.next()) {
                matchOid = keysRS.getLong(1);
            } else {
                throw new SQLException("Couldn't get autogenerated key for new match object");
            }
            keysRS.close();
            keysRS = null;
            
            stmt.executeUpdate(
                    "INSERT INTO pl_match_group (match_oid, group_id) " +
                    "VALUES ("+matchOid+", 'group_"+time+"')");
            keysRS = stmt.executeQuery("SELECT group_oid FROM pl_match_group WHERE group_id='group_"+time+"'");
            long groupOid;
            if (keysRS.next()) {
                groupOid = keysRS.getLong(1);
            } else {
                throw new SQLException("Couldn't get autogenerated key for new match criteria group object");
            }
            keysRS.close();
            keysRS = null;
            
            stmt.executeUpdate(
                    "INSERT INTO pl_match_criteria (group_oid, column_name) " +
                    "VALUES ("+groupOid+", 'fake_column_"+time+"')");

        } finally {
            try {
                if (keysRS != null)
                    keysRS.close();
            } catch (Exception e) {
                System.err.println("Couldn't close result set with keys");
                e.printStackTrace();
            }
            try {
                if (stmt != null)
                    stmt.close();
            } catch (Exception e) {
                System.err.println("Couldn't close statement");
                e.printStackTrace();
            }
            // connection didn't come from a pool so we can't close it
        }
        
        try {
            Match match = getDataAccessObject().findByName(matchName);
            ((TestingMatchMakerHibernateSession) getSession()).setConnectionDisabled(true);
            List<MatchMakerCriteriaGroup> cglist = match.getMatchCriteriaGroups();
            for (MatchMakerCriteriaGroup cg : cglist) {
                System.out.println("Match child: "+cg);  // this could fail if the DAO doesn't cascade the retrieval properly
            }
        } finally {
            ((TestingMatchMakerHibernateSession) getSession()).setConnectionDisabled(false);
        }
    }

}
